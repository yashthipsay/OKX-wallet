/// <reference types="node" />
import { TxData, AccessListEIP2930TxData, FeeMarketEIP1559TxData } from "./sdk";
import { MessageTypes } from "./message";
export declare function getNewAddress(privateKeyHex: string): {
    address: string;
    publicKey: string;
};
export declare function validAddress(address: string): {
    isValid: boolean;
    address: string;
};
export declare function signTransaction(privateKeyHex: string, txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData): string | {
    raw: string;
    hash: string;
    serializeRaw: string;
};
export declare function signMessage(messageType: MessageTypes, message: string, privateKey?: Buffer): string;
export declare function signMPCMessage(messageType: MessageTypes, message: string): string;
export declare function verifyMessage(messageType: MessageTypes, message: string, signature: Buffer): Buffer;
export declare function getMPCTransaction(raw: string, sig: string, publicKey: string): string;
export declare function getMPCSignedMessage(hash: string, sig: string, publicKey: string): string;
export declare function getSignedTransaction(raw: string, r: string, s: string, v: string): string;
export declare function getSignHash(raw: string): string;
export declare function validSignedTransaction(tx: string, chainId?: number, publicKey?: string): Error | import("./sdk").TypedTransaction;
