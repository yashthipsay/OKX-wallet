/// <reference types="node" />
import { BN } from "@okxweb3/crypto-lib";
import { BaseTransaction } from './baseTransaction';
import { AccessList, AccessListBuffer, FeeMarketEIP1559TxData, FeeMarketEIP1559ValuesArray, JsonTx } from './types';
export default class FeeMarketEIP1559Transaction extends BaseTransaction<FeeMarketEIP1559Transaction> {
    readonly chainId: BN;
    readonly accessList: AccessListBuffer;
    readonly AccessListJSON: AccessList;
    readonly maxPriorityFeePerGas: BN;
    readonly maxFeePerGas: BN;
    static fromTxData(txData: FeeMarketEIP1559TxData): FeeMarketEIP1559Transaction;
    static fromSerializedTx(serialized: Buffer): FeeMarketEIP1559Transaction;
    static fromValuesArray(values: FeeMarketEIP1559ValuesArray): FeeMarketEIP1559Transaction;
    constructor(txData: FeeMarketEIP1559TxData);
    raw(): FeeMarketEIP1559ValuesArray;
    serialize(): Buffer;
    getMessageToSign(hashMessage?: boolean): Buffer;
    hash(): Buffer;
    _processSignature(v: number, r: Buffer, s: Buffer): FeeMarketEIP1559Transaction;
    _processSignatureWithRawV(v: number, r: Buffer, s: Buffer): FeeMarketEIP1559Transaction;
    toJSON(): JsonTx;
    errorStr(): string;
    protected _errorMsg(msg: string): string;
}
